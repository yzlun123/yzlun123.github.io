<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2024-01-19T20:06:17+08:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">yzlun’s blog</title><entry><title type="html">pandas agg方法浅谈</title><link href="http://localhost:4000/data_science/2023/12/24/pandas_agg_methos.html" rel="alternate" type="text/html" title="pandas agg方法浅谈" /><published>2023-12-24T00:00:00+08:00</published><updated>2023-12-24T00:00:00+08:00</updated><id>http://localhost:4000/data_science/2023/12/24/pandas_agg_methos</id><content type="html" xml:base="http://localhost:4000/data_science/2023/12/24/pandas_agg_methos.html"><![CDATA[<p>数据分析使用pandas，在聚合groupby的情况下，经常使用agg方法来计算多个统计值，如极值、平均值、分位值等，在计算对象是单列、多列条件下，如何使用。</p>

<h2 id="数据准备">数据准备</h2>
<p>使用鸢尾花数据，转换为pandas dataframe使用。</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># import libraries
</span><span class="kn">from</span> <span class="nn">sklearn</span> <span class="kn">import</span> <span class="n">datasets</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>

<span class="c1"># load data
</span><span class="n">iris</span> <span class="o">=</span> <span class="n">datasets</span><span class="p">.</span><span class="n">load_iris</span><span class="p">()</span>
<span class="n">df0</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">iris</span><span class="p">.</span><span class="n">data</span><span class="p">,</span> <span class="n">columns</span><span class="o">=</span><span class="n">iris</span><span class="p">.</span><span class="n">feature_names</span><span class="p">)</span>
<span class="n">df1</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">iris</span><span class="p">.</span><span class="n">target</span><span class="p">,</span> <span class="n">columns</span><span class="o">=</span><span class="p">[</span><span class="s">'target'</span><span class="p">])</span>
<span class="n">df</span> <span class="o">=</span> <span class="n">df0</span><span class="p">.</span><span class="n">merge</span><span class="p">(</span><span class="n">df1</span><span class="p">,</span> <span class="n">left_index</span><span class="o">=</span><span class="bp">True</span><span class="p">,</span> <span class="n">right_index</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
</code></pre></div></div>

<h2 id="对单列数据聚合处理">对单列数据聚合处理</h2>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># only one columns
</span><span class="n">result_df</span> <span class="o">=</span> <span class="n">df</span><span class="p">.</span><span class="n">groupby</span><span class="p">([</span><span class="s">'target'</span><span class="p">],</span> <span class="n">as_index</span><span class="o">=</span><span class="bp">False</span><span class="p">)[</span><span class="s">'sepal length (cm)'</span><span class="p">].</span><span class="n">agg</span><span class="p">(</span>
    <span class="n">Mean</span> <span class="o">=</span> <span class="s">'mean'</span><span class="p">,</span>
    <span class="n">Std</span> <span class="o">=</span> <span class="s">'std'</span><span class="p">,</span>
    <span class="n">Min</span> <span class="o">=</span> <span class="s">'min'</span><span class="p">,</span>
    <span class="n">TenQuantile</span><span class="o">=</span> <span class="k">lambda</span> <span class="n">x</span><span class="p">:</span> <span class="n">x</span><span class="p">.</span><span class="n">quantile</span><span class="p">(</span><span class="mf">0.1</span><span class="p">)</span>
<span class="p">)</span>

<span class="c1"># another way
</span><span class="n">result_df</span> <span class="o">=</span> <span class="n">df</span><span class="p">.</span><span class="n">groupby</span><span class="p">([</span><span class="s">'target'</span><span class="p">],</span> <span class="n">as_index</span><span class="o">=</span><span class="bp">False</span><span class="p">)[</span><span class="s">'sepal length (cm)'</span><span class="p">].</span><span class="n">agg</span><span class="p">(</span>
    <span class="p">{</span>
        <span class="s">'Mean'</span><span class="p">:</span> <span class="s">'mean'</span><span class="p">,</span>
        <span class="s">'Std'</span><span class="p">:</span> <span class="s">'std'</span><span class="p">,</span>
        <span class="s">'Min'</span><span class="p">:</span> <span class="s">'min'</span><span class="p">,</span>
        <span class="s">'10% Quantile'</span><span class="p">:</span> <span class="k">lambda</span> <span class="n">x</span><span class="p">:</span> <span class="n">x</span><span class="p">.</span><span class="n">quantile</span><span class="p">(</span><span class="mf">0.1</span><span class="p">),</span>
    <span class="p">}</span>
<span class="p">)</span>

<span class="k">print</span><span class="p">(</span><span class="n">result_df</span><span class="p">)</span>
</code></pre></div></div>

<h2 id="对多列数据聚合处理">对多列数据聚合处理</h2>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># multiple columns
</span><span class="n">result_df</span> <span class="o">=</span> <span class="n">df</span><span class="p">.</span><span class="n">groupby</span><span class="p">([</span><span class="s">'target'</span><span class="p">],</span> <span class="n">as_index</span><span class="o">=</span><span class="bp">False</span><span class="p">).</span><span class="n">agg</span><span class="p">(</span>
    <span class="n">sl_mean</span> <span class="o">=</span> <span class="p">(</span><span class="s">'sepal length (cm)'</span><span class="p">,</span> <span class="s">'mean'</span><span class="p">),</span> 
    <span class="n">sl_std</span> <span class="o">=</span> <span class="p">(</span><span class="s">'sepal length (cm)'</span><span class="p">,</span> <span class="s">'std'</span><span class="p">),</span> 
    <span class="n">sl_min</span> <span class="o">=</span> <span class="p">(</span><span class="s">'sepal length (cm)'</span><span class="p">,</span> <span class="s">'min'</span><span class="p">),</span> 
    <span class="n">sl_tenquantile</span> <span class="o">=</span> <span class="p">(</span><span class="s">'sepal length (cm)'</span><span class="p">,</span> <span class="k">lambda</span> <span class="n">x</span><span class="p">:</span> <span class="n">x</span><span class="p">.</span><span class="n">quantile</span><span class="p">(</span><span class="mf">0.1</span><span class="p">)),</span>
    <span class="n">sw_mean</span> <span class="o">=</span> <span class="p">(</span><span class="s">'sepal width (cm)'</span><span class="p">,</span> <span class="s">'mean'</span><span class="p">),</span> 
    <span class="n">sw_std</span> <span class="o">=</span> <span class="p">(</span><span class="s">'sepal width (cm)'</span><span class="p">,</span> <span class="s">'std'</span><span class="p">),</span> 
    <span class="n">sw_min</span> <span class="o">=</span> <span class="p">(</span><span class="s">'sepal width (cm)'</span><span class="p">,</span> <span class="s">'min'</span><span class="p">),</span> 
    <span class="n">sw_tenquantile</span> <span class="o">=</span> <span class="p">(</span><span class="s">'sepal width (cm)'</span><span class="p">,</span> <span class="k">lambda</span> <span class="n">x</span><span class="p">:</span> <span class="n">x</span><span class="p">.</span><span class="n">quantile</span><span class="p">(</span><span class="mf">0.1</span><span class="p">)),</span>
<span class="p">)</span>

<span class="c1"># another way
</span><span class="n">cols</span> <span class="o">=</span> <span class="p">[</span><span class="s">'sepal length (cm)'</span><span class="p">,</span> <span class="s">'sepal width (cm)'</span><span class="p">]</span>
<span class="n">result_df</span> <span class="o">=</span> <span class="n">df</span><span class="p">.</span><span class="n">groupby</span><span class="p">([</span><span class="s">'target'</span><span class="p">],</span> <span class="n">as_index</span><span class="o">=</span><span class="bp">False</span><span class="p">)[</span><span class="n">cols</span><span class="p">].</span><span class="n">agg</span><span class="p">(</span>
    <span class="p">{</span>
        <span class="s">'sepal length (cm)'</span><span class="p">:</span> <span class="p">[(</span><span class="s">'Mean'</span><span class="p">,</span> <span class="s">'mean'</span><span class="p">),</span> <span class="p">(</span><span class="s">'Std'</span><span class="p">,</span> <span class="s">'std'</span><span class="p">),</span> <span class="p">(</span><span class="s">'Min'</span><span class="p">,</span> <span class="s">'min'</span><span class="p">),</span> <span class="p">(</span><span class="s">'10% Quantile'</span><span class="p">,</span> <span class="k">lambda</span> <span class="n">x</span><span class="p">:</span> <span class="n">x</span><span class="p">.</span><span class="n">quantile</span><span class="p">(</span><span class="mf">0.1</span><span class="p">))],</span>
        <span class="s">'sepal width (cm)'</span><span class="p">:</span> <span class="p">[(</span><span class="s">'Mean'</span><span class="p">,</span> <span class="s">'mean'</span><span class="p">),</span> <span class="p">(</span><span class="s">'Std'</span><span class="p">,</span> <span class="s">'std'</span><span class="p">),</span> <span class="p">(</span><span class="s">'Min'</span><span class="p">,</span> <span class="s">'min'</span><span class="p">),</span> <span class="p">(</span><span class="s">'10% Quantile'</span><span class="p">,</span> <span class="k">lambda</span> <span class="n">x</span><span class="p">:</span> <span class="n">x</span><span class="p">.</span><span class="n">quantile</span><span class="p">(</span><span class="mf">0.1</span><span class="p">))],</span>
    <span class="p">}</span>
<span class="p">)</span>

<span class="k">print</span><span class="p">(</span><span class="n">result_df</span><span class="p">)</span>
</code></pre></div></div>

<h2 id="总结及存在问题">总结及存在问题</h2>
<p>如果不聚合直接计算统计值，可以借助构建dictionary再转换为dataframe，方法如下：</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># build a dictionary
</span><span class="n">result_dict</span> <span class="o">=</span> <span class="p">{</span>
    <span class="s">'Mean'</span><span class="p">:</span> <span class="n">df</span><span class="p">[</span><span class="n">cols</span><span class="p">].</span><span class="n">mean</span><span class="p">(),</span>
    <span class="s">'Std'</span><span class="p">:</span> <span class="n">df</span><span class="p">[</span><span class="n">cols</span><span class="p">].</span><span class="n">std</span><span class="p">(),</span>
    <span class="s">'Min'</span><span class="p">:</span> <span class="n">df</span><span class="p">[</span><span class="n">cols</span><span class="p">].</span><span class="nb">min</span><span class="p">(),</span>
    <span class="s">'10% Quantile'</span><span class="p">:</span> <span class="n">df</span><span class="p">[</span><span class="n">cols</span><span class="p">].</span><span class="n">quantile</span><span class="p">(</span><span class="mf">0.1</span><span class="p">),</span>
<span class="p">}</span>

<span class="c1"># convert to dataframe
</span><span class="n">result_df</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">result_dict</span><span class="p">)</span>

<span class="k">print</span><span class="p">(</span><span class="n">result_df</span><span class="p">)</span>
</code></pre></div></div>

<p>如果聚合的话，这种方法会报错，还没能解决。</p>

<h2 id="版本记录">版本记录</h2>
<p>2023-12-24，初稿<br />
2024-01-19，增加另外一种方式，更简明</p>]]></content><author><name></name></author><category term="Data_Science" /><summary type="html"><![CDATA[数据分析使用pandas，在聚合groupby的情况下，经常使用agg方法来计算多个统计值，如极值、平均值、分位值等，在计算对象是单列、多列条件下，如何使用。]]></summary></entry><entry><title type="html">车联网数据分析（一）：数据采集及数据质量监控</title><link href="http://localhost:4000/data_science/2023/12/05/IoV_data_analysis_1.html" rel="alternate" type="text/html" title="车联网数据分析（一）：数据采集及数据质量监控" /><published>2023-12-05T00:00:00+08:00</published><updated>2023-12-05T00:00:00+08:00</updated><id>http://localhost:4000/data_science/2023/12/05/IoV_data_analysis_1</id><content type="html" xml:base="http://localhost:4000/data_science/2023/12/05/IoV_data_analysis_1.html"><![CDATA[<p>车联网数据分析包括数据接入、分析建模、可视化、问题管理封闭，本文属于<strong>数据接入</strong>部分。</p>

<h2 id="数据采集">数据采集</h2>
<h3 id="动态数据采集">动态数据采集</h3>
<!-- _includes/mermaid.html -->
<script src="/assets/js/mermaid.min.js"></script>

<div class="mermaid">
  
flowchart LR
    A[车企平台] -- 配置下发 --&gt;  B[终端采集数据] -- 移动网络 --&gt; C[消息队列] -- 数据存储 --&gt; E[(数据库)] 

</div>
<script>
  mermaid.initialize({startOnLoad:true});
</script>

<h3 id="静态数据">静态数据</h3>
<p>静态数据一般使用整车VIN码或终端编号作为主键，与企业内的其他产品信息，如车辆型号、动力总成配置等关联，便于多维度数据分析。</p>

<h2 id="遇到的问题及解决方案">遇到的问题及解决方案</h2>
<ol>
  <li><strong>静态信息不准确，如整车编号缺失、型号不对等</strong><br />
没有好的办法，只能从源头解决，通过主数据、多表关联、预处理规则等来解决。</li>
  <li><strong>动态数据质量评价，如数据流、OBD流等</strong><br />
一阶段是通过静态信息、数据流、OBD流等关键重要项评分，进行单车评价，进而聚合为整个数据源的评价，直观性不够；<br />
二阶段是通过丢包、丢条、数据频率等算法开发，进行数据评价，指标太多，实用性不强；
现阶段用的是数据流和OBD流互相校验的方式，每天生成一个值，通过一段时间（一般两周）的趋势分析，来判断数据质量。</li>
  <li><strong>部分终端一些参数无法采集</strong><br />
分析异常时发现车辆终端编号规律，进而锁定终端厂家原因。</li>
</ol>

<h2 id="总结">总结</h2>
<p>问题一般出在静态信息质量不高、数据流或OBD流回传异常上，通过监控可以判断出来，采取补录等措施。</p>

<h2 id="版本记录">版本记录</h2>
<p>2023-12-05，初稿。</p>]]></content><author><name></name></author><category term="Data_Science" /><summary type="html"><![CDATA[最近两年从事一些车联网数据分析的工作，做一些总结，此部分关于车联网数据分析的数据采集及数据质量监控]]></summary></entry><entry><title type="html">我的第一篇博客文章：Jekyll + GitHub Codespaces + Pages + Copilot</title><link href="http://localhost:4000/something_new/2023/11/21/my_first_post.html" rel="alternate" type="text/html" title="我的第一篇博客文章：Jekyll + GitHub Codespaces + Pages + Copilot" /><published>2023-11-21T00:00:00+08:00</published><updated>2023-11-21T00:00:00+08:00</updated><id>http://localhost:4000/something_new/2023/11/21/my_first_post</id><content type="html" xml:base="http://localhost:4000/something_new/2023/11/21/my_first_post.html"><![CDATA[<p>这是我的第一篇博客文章。欢迎阅读！</p>

<h2 id="背景">背景</h2>
<p>WordPress除了文章发布，很多高级特性用不到，主机明年到期，便产生了使用Jekyll替代的想法。</p>

<h2 id="尝试">尝试</h2>
<ol>
  <li>创建domin.github.io的仓库；</li>
  <li>用GitHub Codespaces打开仓库，使用GitHub Copilot，询问Jekyll + GitHub Pages部署步骤及代码；</li>
  <li>bundle exec jekyll serve，发布！</li>
</ol>

<h2 id="总结">总结</h2>
<p>GitHub Copilot这类大语言模型的出现，极大降低了新手的门槛，带来了新的学习模式的改变。</p>

<h2 id="版本记录">版本记录</h2>
<p>2023-11-21，初稿；</p>]]></content><author><name></name></author><category term="Something_New" /><summary type="html"><![CDATA[记录第一篇Jekyll博客，基于Jekyll + GitHub Codespaces + Pages + Copilot搭建]]></summary></entry></feed>